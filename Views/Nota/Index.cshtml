@model List<CRUD_AlunosMateriasNotas.Models.Aluno>
@{
    ViewData["Title"] = "Index";
    var pesquisa = Context.Request.Query["pesquisa"];
}
<h1>Notas</h1>

<br />
<br />
<!--
    Formulário
    -- QueryString: Nota/Index?pesquisa={palavraDigitada}&pagina=3
-->
<form class="row g-3" method="post">
    <div class="col-auto">
        <label for="pesquisa"></label>
        <input type="text" name="pesquisa" id="pesquisa" value="@pesquisa" class="form-control" placeholder="Digite o nome do aluno" required>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary btn_novo">Buscar</button>
        <a asp-action="Cadastrar" class="btn btn-secondary btn_novo">Nova Nota</a>
    </div>
</form>
<br />
<br />

@*@{ await Html.RenderPartialAsync("~/Views/Shared/_Mensagem.cshtml"); }*@

@if (Model.Count > 0)
{

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Id)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Nome)</th>
                    <th scope="col">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Aluno aluno in Model)
                {
                    <tr>
                        <th scope="row">@aluno.Id</th>
                        <td>@aluno.Nome</td>
                        <td>
                            <a asp-controller="Nota" asp-action="NotasPorAluno" asp-route-alunoId="@aluno.Id" class="btn btn-secondary btn-tables">Notas</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @* @Html.PagedListPager((IPagedList)Model, pagina => Url.Action("Index", new { pagina = pagina, pesquisa = pesquisa }))*@

}
else
{
    <span>Nenhum registro cadastrado!</span>
}